{{- if and ( or ( eq .Values.type "app" ) ( eq .Values.type "worker") ) ( not .Values.statefulset ) }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "application.fullname" . }}
  labels:
    {{- include "application.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "application.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        {{- if .Values.podAnnotations  }}
        {{- toYaml .Values.podAnnotations  | nindent 8 }}
        {{- end }}
      labels:
        {{- include "application.selectorLabels" . | nindent 8 }}
        {{- if .Values.labels }}
        dept: {{.Values.labels.department}}
        product: {{.Values.labels.product}}
        {{- end }}
        {{- if .Values.sidecar }}
        sidecar.istio.io/inject: "true"
        {{- end }}
    spec:
      {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml .Values.imagePullSecrets | nindent 8 }}
      {{- end }}
      {{- if .Values.serviceAccount.create }}
      serviceAccountName: {{ include "application.serviceAccountName" . }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- if .Values.secretMounts }}
      volumes: 
        {{- range .Values.secretMounts }}
        - name: {{ .name }}
          secret:
            secretName: {{ .secretName }}
        {{- end }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.image.containerPort }}
          {{- if .Values.image.command }}
          command: ["/bin/sh"]
          args: ["-c", "{{ .Values.image.command}}" ]
          {{- end }}
          env: {{ toYaml .Values.extraEnvs | nindent 12 }}
          envFrom: {{ toYaml .Values.envFrom | nindent 12 }}
          {{- if .Values.livenessProbe }}
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          {{- end }}
          {{- if .Values.readinessProbe }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          {{- end }}
          {{- if .Values.resources }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- end }}
          {{- if .Values.secretMounts }}
          volumeMounts: 
            {{- range .Values.secretMounts }}
            - name: {{ .name }}
              mountPath: {{ .path }}
              {{- if .subPath }}
              subPath: {{ .subPath }}
              {{- end }}
            {{- end }}
          {{- end }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{ toYaml . | nindent 8 }}
      {{- end }}
      {{- if or ( .Values.nodeAffinity ) ( .Values.podAffinity ) ( .Values.podAntiAffinity ) }}
      affinity:
        {{- if .Values.nodeAffinity }}
        nodeAffinity:
        {{- include "common.tplvalues.render" (dict "value" .Values.nodeAffinity "context" $) | nindent 10 }}
        {{- end }}
        {{- if .Values.podAffinity }}
        podAffinity:
        {{- include "common.tplvalues.render" (dict "value" .Values.podAffinity "context" $) | nindent 10 }}
        {{- end }}
        {{- if .Values.podAntiAffinity }}
        podAntiAffinity:
        {{- include "common.tplvalues.render" (dict "value" .Values.podAntiAffinity "context" $) | nindent 10 }}
        {{- end }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
